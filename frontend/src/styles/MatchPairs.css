/* Fix for document-level scrolling */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  overflow-y: auto;
}

/* Fix container to always be at least full viewport height but allow scrolling */
.match-pairs-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh;
  width: 100%;
  background: linear-gradient(to bottom right, #f5f9ff, #e0e8ff);
  padding: 1.5rem;
  padding-bottom: 2rem; /* Reduced since controls now scroll */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  box-sizing: border-box;
  position: relative;
  overflow-x: hidden;
}

.back-button-container {
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 100;
}

.back-button {
  display: flex;
  align-items: center;
  gap: 6px;
  background-color: rgba(255, 255, 255, 0.8);
  color: #4A90E2;
  border: none;
  border-radius: 20px;
  padding: 10px 16px;
  font-size: 0.95rem;
  font-weight: 500;
  cursor: pointer;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
}

.back-button:hover {
  background-color: white;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
}

.back-button svg {
  width: 1.2rem;
  height: 1.2rem;
}

/* Responsive styles for the back button */
@media (max-width: 576px) {
  .back-button-container {
    top: 15px;
    left: 15px;
  }
  
  .back-button span {
    display: none; /* Hide text on small screens */
  }
  
  .back-button {
    padding: 8px;
    border-radius: 50%;
  }
}
  
  /* Start Screen Styles */
  .start-screen {
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 20px;
    padding: 2.5rem;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    max-width: 500px;
    width: 90%;
    animation: scaleIn 0.5s ease-out forwards;
  }
  
  .start-screen h1 {
    color: #4A90E2;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .start-screen p {
    color: #666;
    margin-bottom: 2rem;
    font-size: 1.1rem;
  }
  
  .difficulty-selector {
    margin-bottom: 2rem;
  }
  
  .difficulty-selector h3 {
    color: #333;
    margin-bottom: 1rem;
  }
  
  .difficulty-options {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }
  
  .difficulty-button {
    background-color: #f0f0f0;
    border: 2px solid #f0f0f0;
    border-radius: 8px;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .difficulty-button:hover {
    background-color: #e0e0e0;
  }
  
  .difficulty-button.selected {
    background-color: #4A90E2;
    color: white;
    border-color: #4A90E2;
  }
  
  .start-button {
    background-color: #4A90E2;
    color: white;
    border: none;
    border-radius: 8px;
    padding: 1rem 2rem;
    font-size: 1.2rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(74, 144, 226, 0.2);
  }
  
  .start-button:hover {
    background-color: #357ABD;
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(74, 144, 226, 0.3);
  }
  
  /* Game Header */
  .game-header {
    width: 100%;
    max-width: 700px;
    text-align: center;
    margin-bottom: 2rem;
    animation: fadeInDown 0.5s ease-out forwards;
  }
  
  .game-header h1 {
    color: #333;
    margin-bottom: 1rem;
    font-weight: 600;
    font-size: 2.5rem;
  }
  
  .game-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-bottom: 1.5rem;
  }
  
  .stat-item {
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: #666;
    margin-bottom: 0.25rem;
  }
  
  .stat-value {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
  }
  
  /* Memory Game Grid */
  .memory-game {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 1rem;
    perspective: 1000px;
    max-width: 700px;
    width: 100%;
    margin: 0 auto 1.5rem; /* Reduced bottom margin */
    animation: fadeIn 0.5s ease-out forwards;
  }
  
  /* Adjust heights for different difficulty levels */
  .memory-game.easy {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 140px); /* Explicit height */
    max-width: 500px;
  }
  
  .memory-game.medium {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 140px); /* Explicit height */
    max-width: 600px;
  }
  
  .memory-game.hard {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 140px); /* Explicit height */
    max-width: 600px;
  }
  
  /* Memory Card Styles */
  .memory-card {
    height: 100%; /* Fill grid cell height */
    position: relative;
    transform-style: preserve-3d;
    cursor: pointer;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    background-color: #fff;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
  
  /* Add special styling for the end game button */
  .control-button.end-game {
    background-color: rgba(208, 2, 27, 0.1);
  }
  
  .control-button.end-game:hover {
    background-color: rgba(208, 2, 27, 0.2);
  }
  
  .control-button.end-game svg {
    color: #D0021B;
  }

  .no-cards-message {
    grid-column: 1 / -1;
    text-align: center;
    padding: 2rem;
    font-size: 1.2rem;
    color: #666;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 12px;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  }

  .memory-card-back {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    z-index: 1; /* Ensure it's above the front */
  }
  
  .memory-card:hover {
    transform: translateY(-5px);
  }
  
  .memory-card.flipped {
    transform: rotateY(180deg);
  }
  
  .memory-card.matched {
    transform: rotateY(180deg) scale(1.05);
    box-shadow: 0 0 20px rgba(74, 144, 226, 0.6);
  }
  
  .memory-card.match-animation {
    animation: matchPulse 1.5s ease-in-out;
  }
  
  .memory-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.5s;
  }
  
  .memory-card-front,
  .memory-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
  }
  
  .memory-card-back {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
  }
  
  .memory-card-back svg {
    width: 60%;
    height: 60%;
    fill: rgba(255, 255, 255, 0.7);
    filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.2));
    transition: all 0.3s ease;
  }
  
  .memory-card:hover .memory-card-back svg {
    transform: scale(1.1);
  }
  
  .memory-card-front {
    transform: rotateY(180deg);
    padding: 10px;
  }
  
  .memory-card-front svg {
    width: 80%;
    height: 80%;
    stroke: white;
    stroke-width: 1;
    fill: rgba(255, 255, 255, 0.4);
    filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.1));
  }
  
  .memory-card-front svg line,
  .memory-card-front svg path,
  .memory-card-front svg polyline {
    stroke: white;
    stroke-width: 2;
  }
  
  /* Controls */
  .controls {
    margin-top: 1.5rem;
    margin-bottom: 2rem;
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    animation: fadeInUp 0.5s ease-out forwards;
    position: relative; /* Changed from fixed to relative */
    background: rgba(255, 255, 255, 0.8);
    padding: 0.75rem;
    border-radius: 20px;
    backdrop-filter: blur(5px);
    z-index: 10;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
  }
  
  .control-button {
    background-color: rgba(255, 255, 255, 0.8);
    border: none;
    border-radius: 50%;
    width: 3.5rem;
    height: 3.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .control-button:hover {
    background-color: white;
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
  }
  
  .control-button svg {
    width: 1.5rem;
    height: 1.5rem;
    color: #4A90E2;
  }
  
  /* Win Message */
  .win-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 2.5rem;
    border-radius: 16px;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    z-index: 100;
    animation: popIn 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    max-width: 90%;
    width: 400px;
  }
  
  .win-message h2 {
    color: #4A90E2;
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  
  .win-message p {
    font-size: 1.1rem;
    color: #333;
    margin-bottom: 1.5rem;
  }
  
  .win-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }
  
  .restart-button, .menu-button {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .restart-button {
    background-color: #4A90E2;
    color: white;
  }
  
  .restart-button:hover {
    background-color: #357ABD;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(74, 144, 226, 0.3);
  }
  
  .menu-button {
    background-color: #f0f0f0;
    color: #333;
  }
  
  .menu-button:hover {
    background-color: #e0e0e0;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* Confetti Animation */
  .confetti-container {
    position: fixed; 
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    overflow: hidden;
    z-index: 50;
  }
  
  .confetti {
    position: absolute;
    width: 10px;
    height: 20px;
    opacity: 0.7;
    animation: confettiFall 5s ease-out infinite;
    transform-origin: center;
  }

    /* Add styles for a scrollbar that matches the design */
  ::-webkit-scrollbar {
    width: 10px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(74, 144, 226, 0.4);
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(74, 144, 226, 0.6);
  }
  
  /* Animations */
  @keyframes confettiFall {
    0% {
      transform: translateY(-100px) rotate(0deg);
      opacity: 1;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(calc(100vh + 100px)) rotate(720deg);
      opacity: 0;
    }
  }
  
  @keyframes matchPulse {
    0% {
      box-shadow: 0 0 0 0 rgba(74, 144, 226, 0.7);
      transform: rotateY(180deg) scale(1.05);
    }
    30% {
      box-shadow: 0 0 0 15px rgba(74, 144, 226, 0);
      transform: rotateY(180deg) scale(1.15);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(74, 144, 226, 0);
      transform: rotateY(180deg) scale(1.05);
    }
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes popIn {
    0% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(0.8);
    }
    80% {
      transform: translate(-50%, -50%) scale(1.05);
    }
    100% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  }
  
  /* Responsive Styles */
  @media (max-width: 768px) {
    .memory-game.easy {
      grid-template-rows: repeat(2, 120px);
    }
    
    .memory-game.medium {
      grid-template-rows: repeat(3, 120px);
    }
    
    .memory-game.hard {
      grid-template-rows: repeat(4, 120px);
    }
  }
  
  @media (max-width: 576px) {
    .controls {
      flex-wrap: wrap; /* Allow controls to wrap on very small screens */
      gap: 1rem;
    }
    
    .match-pairs-container {
      padding: 1rem;
      padding-bottom: 2rem;
    }
  }
  
  @media (max-width: 400px) {
    .memory-game.hard {
      grid-template-rows: repeat(8, 90px);
    }
  }